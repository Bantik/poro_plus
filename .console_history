a.data.map{|d| d.to_tsv}
a.data(Date.today - 1.week, Date.today).map{|d| d.to_tsv}
a.data(Date.today - 1.week, Date.today).map{|d| d.to_tsv} * "\r"
pp
pp a.data(Date.today - 1.week, Date.today).map{|d| d.to_tsv} * "\r"
a.title
pp a.data(Date.today - 1.week, Date.today).map{|d| d.to_tsv}
pp a.fetch_data(Date.today - 1.week, Date.today)
a.data_points.last
a.data_points
p = Sources::GoogleAnalytics::Profile.new(email: 'coreybantik@gmail.com', password: '$amura!23')
a = p.accounts.last
p = Sources::GoogleAnalytics::Report.new(email: 'coreybantik@gmail.com', password: '$amura!23')
p.report
a = Sources::GoogleAnalytics::Account.new(email: 'coreybantik@gmail.com', password: '$amura!23')
a = Sources::GoogleAnalytics::Account.find(email: 'coreybantik@gmail.com', password: '$amura!23', '1')
a = Sources::GoogleAnalytics::Account.find('coreybantik@gmail.com','$amura!23123123', '1')
a = Sources::GoogleAnalytics::Account.find('coreybantik@gmail.com','$amura!23', '1')
a = Sources::GoogleAnalytics::Account.all('coreybantik@gmail.com','$amura!23')
a.profiles
a.email
a.profile
a = Sources::GoogleAnalytics::Account.find('coreybantik@gmail.com','$amura!23', 676985)
a = Sources::GoogleAnalytics::Account.all
a = Sources::GoogleAnalytics::Account.all('coreybantik@gmail.com', '$amura!23')
aa = _
a = aa.first
puts "FOO" unless bar = nil
puts "FOO" unless (bar = nil)
c = Sources::GoogleAnalytics::Connector.new
c = Sources::GoogleAnalytics::Connector.new(:email => 'coreybantik@gmail.com')
c = Sources::GoogleAnalytics::Connector.new(:email => 'coreybantik@gmail.com', :password => '$amura!23'))
c = Object.new
c.inspect
c.to_s
c.accounts
a = _.first
a = c.accounts.first
c.accounts.where(:profile_id => 45149121)
c.accounts.where(:profile_id => 45149121).first
a = _
r.account
c.pasword
c.password
a.repoert
a.report
a.report.data
a.password
a = c.accounts.where(:profile_id => 45149121).first; return nil
r.profile_id
r.fetch_data
c = Sources::GoogleAnalytics::Connector.new(:email => 'coreybantik@gmail.com', :password => '$amura!23'); nil
a = c.accounts.where(:profile_id => 45149121).first; nil
relaod!
SearchQuery::Property.new
q = _
exot
q = SearchQuery::Property.new
q = SearchQuery::Property.new; q.foo
q = SearchQuery::Property.new; q.page
q = SearchQuery::Property.new(:page = 1)
q.page
q.execute!
q.instance_variables
q = SearchQuery::Property.new(:page => 1)
q.to_attributes
include Searchable
reload!
searches 'SearchResult::Detail'
Foo.searches
c = Sources::GoogleAnalytics::Connector.new(:email => 'coreybantik@gmail.com', :password => '$amura!23')
c
a = c.accounts.where(:profile_id => 45149121).first
r = a.report
r.data
r.to_tsv
require 'json'
{:foo => 'bar'}.to_json
f.public_send(:bar => 1)
class Foo
def bar
puts "OL"
f = Foo.new
f.public_send(:foo)
f.public_send(:bar)
require 'version'
require 'poro_plus/version'
require 'poro_plus'
PoroPlus
      include PoroPlus
      attr_accessor :foo, :bar
    end
thing_one = MyThing.new(:foo => 'Raven', :bar => 'Writing Desk')
thing_one.to_hash
class MyThing
      attr_accessor :foo, :bar, :tres
end
thing_one = MyThing.new(:foo => 'Raven', :bar => 'Writing Desk', :tres => nil)
thing_one.to_json(:skip_nils => true)
exit
